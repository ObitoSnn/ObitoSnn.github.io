<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java常用类 on 主页</title>
    <link>https://ObitoSnn.gitee.io/docs/java_se%E5%A4%8D%E4%B9%A0%E5%AE%9D%E5%85%B8/%E9%AB%98%E7%BA%A7%E9%83%A8%E5%88%86/java%E5%B8%B8%E7%94%A8%E7%B1%BB/</link>
    <description>Recent content in Java常用类 on 主页</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>&amp;copy; 2021 &lt;a href=&#34;javascript:void(0);&#34;&gt;ObitoSnn&lt;/a&gt;
</copyright>
    <lastBuildDate>Mon, 05 Apr 2021 00:26:01 +0800</lastBuildDate><atom:link href="https://ObitoSnn.gitee.io/docs/java_se%E5%A4%8D%E4%B9%A0%E5%AE%9D%E5%85%B8/%E9%AB%98%E7%BA%A7%E9%83%A8%E5%88%86/java%E5%B8%B8%E7%94%A8%E7%B1%BB/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>String类</title>
      <link>https://ObitoSnn.gitee.io/docs/java_se%E5%A4%8D%E4%B9%A0%E5%AE%9D%E5%85%B8/%E9%AB%98%E7%BA%A7%E9%83%A8%E5%88%86/java%E5%B8%B8%E7%94%A8%E7%B1%BB/string%E7%B1%BB/</link>
      <pubDate>Mon, 05 Apr 2021 00:27:31 +0800</pubDate>
      
      <guid>https://ObitoSnn.gitee.io/docs/java_se%E5%A4%8D%E4%B9%A0%E5%AE%9D%E5%85%B8/%E9%AB%98%E7%BA%A7%E9%83%A8%E5%88%86/java%E5%B8%B8%E7%94%A8%E7%B1%BB/string%E7%B1%BB/</guid>
      <description>概述   String:字符串，使用一对&amp;quot;&amp;ldquo;引起来表示</description>
    </item>
    
    <item>
      <title>StringBuffer、StringBuilder</title>
      <link>https://ObitoSnn.gitee.io/docs/java_se%E5%A4%8D%E4%B9%A0%E5%AE%9D%E5%85%B8/%E9%AB%98%E7%BA%A7%E9%83%A8%E5%88%86/java%E5%B8%B8%E7%94%A8%E7%B1%BB/stringbufferstringbuilder/</link>
      <pubDate>Mon, 05 Apr 2021 14:58:37 +0800</pubDate>
      
      <guid>https://ObitoSnn.gitee.io/docs/java_se%E5%A4%8D%E4%B9%A0%E5%AE%9D%E5%85%B8/%E9%AB%98%E7%BA%A7%E9%83%A8%E5%88%86/java%E5%B8%B8%E7%94%A8%E7%B1%BB/stringbufferstringbuilder/</guid>
      <description>String、StringBuffer、StringBuilder三者的对比 String：不可变的字符序列，底层使用char[]存储
StringBuffer：可变的字符序列；线程安全的，效率低；底层使用char[]存储</description>
    </item>
    
    <item>
      <title>JDK 8之前日期时间API</title>
      <link>https://ObitoSnn.gitee.io/docs/java_se%E5%A4%8D%E4%B9%A0%E5%AE%9D%E5%85%B8/%E9%AB%98%E7%BA%A7%E9%83%A8%E5%88%86/java%E5%B8%B8%E7%94%A8%E7%B1%BB/jdk8%E4%B9%8B%E5%89%8D%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4api/</link>
      <pubDate>Mon, 05 Apr 2021 23:30:30 +0800</pubDate>
      
      <guid>https://ObitoSnn.gitee.io/docs/java_se%E5%A4%8D%E4%B9%A0%E5%AE%9D%E5%85%B8/%E9%AB%98%E7%BA%A7%E9%83%A8%E5%88%86/java%E5%B8%B8%E7%94%A8%E7%B1%BB/jdk8%E4%B9%8B%E5%89%8D%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4api/</guid>
      <description>获取系统当前时间 System类中的currentTimeMillis()
long time = System.</description>
    </item>
    
    <item>
      <title>JDK 8中新日期时间API</title>
      <link>https://ObitoSnn.gitee.io/docs/java_se%E5%A4%8D%E4%B9%A0%E5%AE%9D%E5%85%B8/%E9%AB%98%E7%BA%A7%E9%83%A8%E5%88%86/java%E5%B8%B8%E7%94%A8%E7%B1%BB/jdk8%E4%B8%AD%E6%96%B0%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4api/</link>
      <pubDate>Tue, 06 Apr 2021 12:16:35 +0800</pubDate>
      
      <guid>https://ObitoSnn.gitee.io/docs/java_se%E5%A4%8D%E4%B9%A0%E5%AE%9D%E5%85%B8/%E9%AB%98%E7%BA%A7%E9%83%A8%E5%88%86/java%E5%B8%B8%E7%94%A8%E7%B1%BB/jdk8%E4%B8%AD%E6%96%B0%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4api/</guid>
      <description>日期时间API的迭代 第一代：JDK 1.0 Date类</description>
    </item>
    
    <item>
      <title>Java比较器</title>
      <link>https://ObitoSnn.gitee.io/docs/java_se%E5%A4%8D%E4%B9%A0%E5%AE%9D%E5%85%B8/%E9%AB%98%E7%BA%A7%E9%83%A8%E5%88%86/java%E5%B8%B8%E7%94%A8%E7%B1%BB/java%E6%AF%94%E8%BE%83%E5%99%A8/</link>
      <pubDate>Tue, 06 Apr 2021 22:29:57 +0800</pubDate>
      
      <guid>https://ObitoSnn.gitee.io/docs/java_se%E5%A4%8D%E4%B9%A0%E5%AE%9D%E5%85%B8/%E9%AB%98%E7%BA%A7%E9%83%A8%E5%88%86/java%E5%B8%B8%E7%94%A8%E7%B1%BB/java%E6%AF%94%E8%BE%83%E5%99%A8/</guid>
      <description>Java比较器的使用背景 Java中的对象，正常情况下，只能进行比较：== 或 !</description>
    </item>
    
    <item>
      <title>其他类</title>
      <link>https://ObitoSnn.gitee.io/docs/java_se%E5%A4%8D%E4%B9%A0%E5%AE%9D%E5%85%B8/%E9%AB%98%E7%BA%A7%E9%83%A8%E5%88%86/java%E5%B8%B8%E7%94%A8%E7%B1%BB/%E5%85%B6%E4%BB%96%E7%B1%BB/</link>
      <pubDate>Tue, 06 Apr 2021 23:01:03 +0800</pubDate>
      
      <guid>https://ObitoSnn.gitee.io/docs/java_se%E5%A4%8D%E4%B9%A0%E5%AE%9D%E5%85%B8/%E9%AB%98%E7%BA%A7%E9%83%A8%E5%88%86/java%E5%B8%B8%E7%94%A8%E7%B1%BB/%E5%85%B6%E4%BB%96%E7%B1%BB/</guid>
      <description>System类  System类代表系统，系统级的很多属性和控制方法都放置在该类的内部。该类位于java.lang包 由于该类的构造器是private的，所以无法创建该类的对象，也就是无法实例化该类。其内部的成员变量和成员方法都是static的，所以也可以很方便的进行调用 方法  native long currentTimeMills() void exit(int status) void gc() String getProperty(String key)    Math类 java.</description>
    </item>
    
  </channel>
</rss>
