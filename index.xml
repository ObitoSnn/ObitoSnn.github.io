<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>主页</title>
    <link>https://ObitoSnn.gitee.io/</link>
    <description>Recent content on 主页</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>&amp;copy; 2021 &lt;a href=&#34;javascript:void(0);&#34;&gt;ObitoSnn&lt;/a&gt;
</copyright>
    <lastBuildDate>Wed, 24 Feb 2021 14:19:01 +0800</lastBuildDate><atom:link href="https://ObitoSnn.gitee.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java语言概述</title>
      <link>https://ObitoSnn.gitee.io/docs/java%E5%A4%8D%E4%B9%A0%E5%AE%9D%E5%85%B8/%E5%9F%BA%E7%A1%80%E9%83%A8%E5%88%86/java%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0/java%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Wed, 24 Feb 2021 12:29:00 +0800</pubDate>
      
      <guid>https://ObitoSnn.gitee.io/docs/java%E5%A4%8D%E4%B9%A0%E5%AE%9D%E5%85%B8/%E5%9F%BA%E7%A1%80%E9%83%A8%E5%88%86/java%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0/java%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0/</guid>
      <description>Java语言概述 基础常识  软件：即一系列按照特定顺序组织的计算机数据和指令的集合，系统软件和应用软件  系统软件：windows , mac os , linux ,unix,android,ios,&amp;hellip;.</description>
    </item>
    
    <item>
      <title>开发环境的搭建</title>
      <link>https://ObitoSnn.gitee.io/docs/java%E5%A4%8D%E4%B9%A0%E5%AE%9D%E5%85%B8/%E5%9F%BA%E7%A1%80%E9%83%A8%E5%88%86/java%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Wed, 24 Feb 2021 12:39:54 +0800</pubDate>
      
      <guid>https://ObitoSnn.gitee.io/docs/java%E5%A4%8D%E4%B9%A0%E5%AE%9D%E5%85%B8/%E5%9F%BA%E7%A1%80%E9%83%A8%E5%88%86/java%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/</guid>
      <description>开发环境的搭建（重点） JDK、JRE、JVM的关系 JDK的下载、安装  下载：官网，github 安装：傻瓜式安装：JDK、JRE （安装软件的路径中不能包含中文、空格）  path环境变量的配置 为什么配置path环境变量？ path环境变量：windows操作系统执行命令时所要搜寻的路径 为什么要配置path:希望java的开发工具（javac.</description>
    </item>
    
    <item>
      <title>第一个Java程序</title>
      <link>https://ObitoSnn.gitee.io/docs/java%E5%A4%8D%E4%B9%A0%E5%AE%9D%E5%85%B8/%E5%9F%BA%E7%A1%80%E9%83%A8%E5%88%86/java%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0/%E7%AC%AC%E4%B8%80%E4%B8%AAjava%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Wed, 24 Feb 2021 14:02:30 +0800</pubDate>
      
      <guid>https://ObitoSnn.gitee.io/docs/java%E5%A4%8D%E4%B9%A0%E5%AE%9D%E5%85%B8/%E5%9F%BA%E7%A1%80%E9%83%A8%E5%88%86/java%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0/%E7%AC%AC%E4%B8%80%E4%B8%AAjava%E7%A8%8B%E5%BA%8F/</guid>
      <description>开发体验——HelloWorld 编写 创建一个java源文件：HelloWorld.javapublic class HelloWorld{public static void main(String[] args){System.</description>
    </item>
    
    <item>
      <title>注释与API文档等</title>
      <link>https://ObitoSnn.gitee.io/docs/java%E5%A4%8D%E4%B9%A0%E5%AE%9D%E5%85%B8/%E5%9F%BA%E7%A1%80%E9%83%A8%E5%88%86/java%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0/%E6%B3%A8%E9%87%8A%E4%B8%8Eapi%E6%96%87%E6%A1%A3%E7%AD%89/</link>
      <pubDate>Wed, 24 Feb 2021 14:05:16 +0800</pubDate>
      
      <guid>https://ObitoSnn.gitee.io/docs/java%E5%A4%8D%E4%B9%A0%E5%AE%9D%E5%85%B8/%E5%9F%BA%E7%A1%80%E9%83%A8%E5%88%86/java%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0/%E6%B3%A8%E9%87%8A%E4%B8%8Eapi%E6%96%87%E6%A1%A3%E7%AD%89/</guid>
      <description>注释:Comment  分类：  单行注释：// 多行注释：/* */ 文档注释：/** */   作用：  对所写的程序进行解释说明，增强可读性。方便自己，方便别人 调试所写的代码   特点：  单行注释和多行注释，注释了的内容不参与编译。换句话说，编译以后生成的.</description>
    </item>
    
    <item>
      <title>浅谈Map</title>
      <link>https://ObitoSnn.gitee.io/posts/%E6%B5%85%E8%B0%88map/</link>
      <pubDate>Wed, 24 Feb 2021 14:19:01 +0800</pubDate>
      
      <guid>https://ObitoSnn.gitee.io/posts/%E6%B5%85%E8%B0%88map/</guid>
      <description>Map接口 双列集合，用来存储一对(key - value)一对的数据</description>
    </item>
    
    <item>
      <title>JDBC——针对不同表的通用查询操作，返回多条数据</title>
      <link>https://ObitoSnn.gitee.io/posts/jdbc%E9%92%88%E5%AF%B9%E4%B8%8D%E5%90%8C%E8%A1%A8%E7%9A%84%E9%80%9A%E7%94%A8%E6%9F%A5%E8%AF%A2%E6%93%8D%E4%BD%9C%E8%BF%94%E5%9B%9E%E5%A4%9A%E6%9D%A1%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Wed, 24 Feb 2021 14:17:11 +0800</pubDate>
      
      <guid>https://ObitoSnn.gitee.io/posts/jdbc%E9%92%88%E5%AF%B9%E4%B8%8D%E5%90%8C%E8%A1%A8%E7%9A%84%E9%80%9A%E7%94%A8%E6%9F%A5%E8%AF%A2%E6%93%8D%E4%BD%9C%E8%BF%94%E5%9B%9E%E5%A4%9A%E6%9D%A1%E6%95%B0%E6%8D%AE/</guid>
      <description>思路： ① 获取连接 ② 预编译SQL返回PreparedStatement实例 ③ 处理占位符 ④ 执行操作返回ResultSet并处理结果集 ⑤ 关闭资源</description>
    </item>
    
    <item>
      <title>Java 反射机制——动态代理举例</title>
      <link>https://ObitoSnn.gitee.io/posts/java-%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E4%B8%BE%E4%BE%8B/</link>
      <pubDate>Wed, 24 Feb 2021 14:15:32 +0800</pubDate>
      
      <guid>https://ObitoSnn.gitee.io/posts/java-%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E4%B8%BE%E4%BE%8B/</guid>
      <description>思路： 实现动态代理需要解决的问题： 问题一：如何根据内存中加载的被代理类，动态的创建代理类及其对象。 问题二：当代理类的对象调用方法a时，如何动态的调用被代理类中声明的方法a。</description>
    </item>
    
    <item>
      <title>Java TCP网络编程——客户端发送文件给服务端，服务端将文件保存在本地</title>
      <link>https://ObitoSnn.gitee.io/posts/java-tcp%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8F%91%E9%80%81%E6%96%87%E4%BB%B6%E7%BB%99%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%B0%86%E6%96%87%E4%BB%B6%E4%BF%9D%E5%AD%98%E5%9C%A8%E6%9C%AC%E5%9C%B0/</link>
      <pubDate>Wed, 24 Feb 2021 14:10:11 +0800</pubDate>
      
      <guid>https://ObitoSnn.gitee.io/posts/java-tcp%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8F%91%E9%80%81%E6%96%87%E4%BB%B6%E7%BB%99%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%B0%86%E6%96%87%E4%BB%B6%E4%BF%9D%E5%AD%98%E5%9C%A8%E6%9C%AC%E5%9C%B0/</guid>
      <description>思路： ①创建客户端Socket与服务端ServerSocket；调用相应的get方法获取流； ②处理数据：先确定要处理的数据(文本文件、非文本文件或字符串)，确定后考虑使用相应的流处理。补充：本次以处理图片为例(非文本文件)。 ③关闭资源。</description>
    </item>
    
    <item>
      <title>Object类概述</title>
      <link>https://ObitoSnn.gitee.io/posts/object%E7%B1%BB%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Tue, 23 Feb 2021 22:22:48 +0800</pubDate>
      
      <guid>https://ObitoSnn.gitee.io/posts/object%E7%B1%BB%E6%A6%82%E8%BF%B0/</guid>
      <description>Object类概述 Object在java.lang包下，Object类是所有类的根类。每个类都使用 Object 作为父类(超类)</description>
    </item>
    
    <item>
      <title>Java IO流——获取文本上字符出现的次数,把数据写入文件</title>
      <link>https://ObitoSnn.gitee.io/posts/java-io%E6%B5%81%E8%8E%B7%E5%8F%96%E6%96%87%E6%9C%AC%E4%B8%8A%E5%AD%97%E7%AC%A6%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0%E6%8A%8A%E6%95%B0%E6%8D%AE%E5%86%99%E5%85%A5%E6%96%87%E4%BB%B6/</link>
      <pubDate>Tue, 23 Feb 2021 22:22:30 +0800</pubDate>
      
      <guid>https://ObitoSnn.gitee.io/posts/java-io%E6%B5%81%E8%8E%B7%E5%8F%96%E6%96%87%E6%9C%AC%E4%B8%8A%E5%AD%97%E7%AC%A6%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0%E6%8A%8A%E6%95%B0%E6%8D%AE%E5%86%99%E5%85%A5%E6%96%87%E4%BB%B6/</guid>
      <description>思路： ①创建文件及相应的流。 ②处理数据：读入和写出。补充：处理文本中字符出现的次数(方式一：将文本文件的字符添加到list，再将字符作为key存入map中，value为字符出现次数；方式二：也可以直接将读入字符存入map中) ③关闭资源。</description>
    </item>
    
  </channel>
</rss>
